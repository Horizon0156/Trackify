<metro:MetroWindow x:Class="Trackify.UI.TrackifyWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:behaviors="clr-namespace:Horizon.MvvmFramework.Wpf.Behaviors;assembly=Horizon.MvvmFramework.Wpf"
                   xmlns:bindings="clr-namespace:Horizon.MvvmFramework.Wpf.Bindings;assembly=Horizon.MvvmFramework.Wpf"
                   xmlns:controls="clr-namespace:Trackify.Controls"
                   xmlns:converter="clr-namespace:Trackify.Converter"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                   xmlns:metroBehaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                   xmlns:resx="clr-namespace:Trackify.Resources"
                   xmlns:system="clr-namespace:System;assembly=mscorlib"
                   xmlns:vm="clr-namespace:Trackify.ViewModels"
                   x:Name="Root"
                   Title="{x:Static resx:CultureDependedTexts.Title}"
                   Width="300"
                   Height="380"
                   MinWidth="280"
                   MinHeight="300"
                   d:DataContext="{d:DesignInstance vm:TrackifyViewModel}"
                   x:ClassModifier="internal"
                   BorderBrush="{DynamicResource AccentColorBrush}"
                   BorderThickness="1"
                   SaveWindowPosition="True"
                   mc:Ignorable="d">
    <i:Interaction.Behaviors>
        <behaviors:ViewModelBehavior UnhandledException="LogExceptionAndTerminateApplication" />
        <behaviors:MinimizeToTrayBehavior />
        <metroBehaviours:BorderlessWindowBehavior />
        <metroBehaviours:WindowsSettingBehaviour />
        <metroBehaviours:GlowWindowBehavior />
    </i:Interaction.Behaviors>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/UsedIcons.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <bindings:BindingProxy x:Key="DataContextProxy" Data="{Binding ElementName=Root, Path=DataContext}" />
            <system:Double x:Key="DailyWorkHours">8.00</system:Double>
            <converter:TotalEffortToColorConverter x:Key="TotalEffortToColorConverter" />

            <Style x:Key="FocusableButtonStyle"
                   BasedOn="{StaticResource MetroCircleButtonStyle}"
                   TargetType="Button">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Style.Triggers>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="EffortTemplate" DataType="{x:Type vm:Effort}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="TimeGroup" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.InputBindings>
                        <MouseBinding Command="{Binding MarkAsBookedCommand}" Gesture="LeftClick" />
                    </Grid.InputBindings>
                    <Grid.Resources>
                        <Style x:Key="BookedEffortStlye"
                               BasedOn="{StaticResource {x:Type TextBlock}}"
                               TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MarkedAsBooked}" Value="True">
                                    <Setter Property="Foreground" Value="DimGray" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Rectangle Grid.Column="3"
                               Width="10"
                               Height="10"
                               Margin="5 0 0 0"
                               VerticalAlignment="Center"
                               metro:VisibilityHelper.IsVisible="{Binding MarkedAsBooked}"
                               Fill="DimGray">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_check}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Grid.Column="0"
                               VerticalAlignment="Center"
                               Style="{StaticResource BookedEffortStlye}"
                               Text="{Binding EffortTimeInHours,
                                              StringFormat='{}{0:N2} h'}" />
                    <TextBlock Grid.Column="2"
                               VerticalAlignment="Center"
                               Style="{StaticResource BookedEffortStlye}"
                               Text="{Binding Description}" />
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="BookingEntryTemplate" DataType="{x:Type vm:TimeAcquisitionModel}">
                <Border BorderBrush="DimGray" BorderThickness="0 0 0 1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.InputBindings>
                            <MouseBinding Command="{Binding ElementName=Root,
                                                            Path=DataContext.EditCommand}"
                                          CommandParameter="{Binding}"
                                          Gesture="LeftClick" />
                        </Grid.InputBindings>
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding Source={StaticResource DataContextProxy},
                                                            Path=Data.EditCommand}"
                                          CommandParameter="{Binding}"
                                          Header="{x:Static resx:CultureDependedTexts.Edit}" />
                                <MenuItem Command="{Binding Source={StaticResource DataContextProxy},
                                                            Path=Data.DeleteCommand}"
                                          CommandParameter="{Binding}"
                                          Header="{x:Static resx:CultureDependedTexts.Delete}" />
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <TextBlock Grid.Column="0"
                                   Margin="10"
                                   VerticalAlignment="Center"
                                   Text="{Binding Description}" />
                        <controls:TimeTracker Grid.Column="1"
                                              Margin="5"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Center"
                                              StartTime="{Binding StartTime}"
                                              StopTime="{Binding StopTime}" />
                        <Button Grid.Column="2"
                                Width="35"
                                Height="35"
                                Margin="5"
                                Command="{Binding ElementName=Root,
                                                  Path=DataContext.RestartCommand}"
                                CommandParameter="{Binding}"
                                Style="{StaticResource FocusableButtonStyle}"
                                ToolTip="{x:Static resx:CultureDependedTexts.RestartTooltip}">
                            <Rectangle Width="10"
                                       Height="10"
                                       Fill="White">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_control_play}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                    </Grid>
                </Border>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <metro:MetroWindow.RightWindowCommands>
        <metro:WindowCommands>
            <Button Command="{Binding SettingsCommand}">
                <Rectangle Width="15"
                           Height="15"
                           Fill="White">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_settings}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </metro:WindowCommands>
    </metro:MetroWindow.RightWindowCommands>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Border Grid.Row="0"
                BorderBrush="DimGray"
                BorderThickness="0 0 0 1">
            <Grid Margin="0 0 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.InputBindings>
                    <MouseBinding Command="{Binding ElementName=Root,
                                                    Path=DataContext.EditCommand}"
                                  CommandParameter="{Binding CurrentAcquisition}"
                                  Gesture="LeftClick" />
                </Grid.InputBindings>
                <TextBox Grid.Column="0"
                         Margin="5"
                         HorizontalAlignment="Stretch"
                         VerticalContentAlignment="Center"
                         metro:TextBoxHelper.Watermark="{x:Static resx:CultureDependedTexts.DescriptionWatermark}"
                         metro:VisibilityHelper.IsCollapsed="{Binding IsTrackingActive}"
                         BorderThickness="0"
                         Text="{Binding CurrentAcquisition.Description,
                                        Mode=TwoWay,
                                        UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding ToggleTrackingCommand}" />
                    </TextBox.InputBindings>
                    <i:Interaction.Behaviors>
                        <behaviors:InitialFocusBehavior FallbackElement="{Binding ElementName=TrackButton}" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBlock Grid.Column="0"
                           Margin="10"
                           VerticalAlignment="Center"
                           metro:VisibilityHelper.IsVisible="{Binding IsTrackingActive}"
                           Text="{Binding CurrentAcquisition.Description}" />
                <controls:TimeTracker Grid.Column="1"
                                      Margin="5"
                                      VerticalAlignment="Center"
                                      IsRunning="{Binding IsTrackingActive}"
                                      StartTime="{Binding CurrentAcquisition.StartTime,
                                                          Mode=TwoWay,
                                                          UpdateSourceTrigger=PropertyChanged}"
                                      StopTime="{Binding CurrentAcquisition.StopTime,
                                                         Mode=TwoWay,
                                                         UpdateSourceTrigger=PropertyChanged}" />
                <Button x:Name="TrackButton"
                        Grid.Column="2"
                        Width="35"
                        Height="35"
                        Margin="5"
                        Command="{Binding ToggleTrackingCommand}"
                        Style="{StaticResource FocusableButtonStyle}">
                    <Rectangle Width="10" Height="10">
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Setter Property="Fill" Value="Green" />
                                <Setter Property="OpacityMask">
                                    <Setter.Value>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_control_play}" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsTrackingActive}" Value="True">
                                        <Setter Property="Fill" Value="Red" />
                                        <Setter Property="OpacityMask">
                                            <Setter.Value>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_control_stop}" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                </Button>
            </Grid>
        </Border>
        <ScrollViewer Grid.Row="1"
                      Grid.RowSpan="2"
                      HorizontalScrollBarVisibility="Disabled"
                      VerticalScrollBarVisibility="Visible">

            <ItemsControl Focusable="False"
                          ItemTemplate="{StaticResource BookingEntryTemplate}"
                          ItemsSource="{Binding TimeAcquisitions}" />

            <i:Interaction.Behaviors>
                <behaviors:AutoScrollBehavior />
            </i:Interaction.Behaviors>
        </ScrollViewer>

        <ScrollViewer Grid.Row="3"
                      HorizontalScrollBarVisibility="Auto"
                      VerticalScrollBarVisibility="Visible">
            <StackPanel Margin="5" Orientation="Vertical">
                <TextBlock Text="{x:Static resx:CultureDependedTexts.Summary}" />
                <ItemsControl Focusable="False"
                              Grid.IsSharedSizeScope="True"
                              ItemTemplate="{StaticResource EffortTemplate}"
                              ItemsSource="{Binding Efforts}" />
            </StackPanel>
        </ScrollViewer>
        <DockPanel Grid.Row="4"
                   Margin="0 5 15 5"
                   HorizontalAlignment="Stretch">
            <DatePicker Margin="0,0,15,0"
                        BorderThickness="0"
                        DockPanel.Dock="Left"
                        SelectedDate="{Binding SelectedDate}" />
            <Button x:Name="AddEntryButton"
                    Width="15"
                    Height="15"
                    Margin="5 0 0 0"
                    VerticalAlignment="Center"
                    Command="{Binding CreateCommand}"
                    CommandParameter="{x:Null}"
                    DockPanel.Dock="Right"
                    FocusVisualStyle="{x:Null}"
                    Style="{DynamicResource ChromelessButtonStyle}"
                    ToolTip="{x:Static resx:CultureDependedTexts.NewEntryTooltip}">
                <Rectangle Width="15" Height="15">
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            <Setter Property="Fill" Value="White" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=AddEntryButton, Path=IsKeyboardFocused}" Value="True">
                                    <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_list_add_below}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <TextBlock Margin="0,0,10,0"
                       VerticalAlignment="Center"
                       DockPanel.Dock="Right"
                       Foreground="{Binding TotalEffortNetToday,
                                            Converter={StaticResource TotalEffortToColorConverter},
                                            ConverterParameter={StaticResource DailyWorkHours}}"
                       Text="{Binding TotalEffortNetToday,
                                      StringFormat='{}{0:N2} h'}"
                       TextAlignment="Right">
                <TextBlock.ToolTip>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{x:Static resx:CultureDependedTexts.BreakTimeSnippet}">
                                <Binding Path="TotalEffortGrossToday" />
                                <Binding Path="TotalEffortNetToday" />
                                <Binding Path="HomeTime" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </TextBlock.ToolTip>
            </TextBlock>

        </DockPanel>
    </Grid>
</metro:MetroWindow>