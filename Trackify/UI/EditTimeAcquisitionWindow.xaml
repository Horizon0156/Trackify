<metro:MetroWindow x:Class="Trackify.UI.EditTimeAcquisitionWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:behaviors="clr-namespace:Horizon.MvvmFramework.Wpf.Behaviors;assembly=Horizon.MvvmFramework.Wpf"
                   xmlns:behaviours="http://metro.mahapps.com/winfx/xaml/shared"
                   xmlns:controls="clr-namespace:Trackify.Controls"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:global="clr-namespace:System.Globalization;assembly=System.Globalization"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                   xmlns:resx="clr-namespace:Trackify.Resources"
                   xmlns:vm="clr-namespace:Trackify.ViewModels"
                   x:Name="Root"
                   Title="{Binding TimeAcquisition.Description,
                                   Mode=OneWay,
                                   TargetNullValue={x:Static resx:CultureDependedTexts.New}}"
                   Width="300"
                   Height="380"
                   MinWidth="280"
                   MinHeight="350"
                   d:DataContext="{d:DesignInstance vm:EditTimeAcquisitionViewModel}"
                   x:ClassModifier="internal"
                   BorderBrush="{DynamicResource AccentColorBrush}"
                   BorderThickness="1"
                   SaveWindowPosition="True"
                   ShowMaxRestoreButton="False"
                   ShowMinButton="False"
                   mc:Ignorable="d">
    <i:Interaction.Behaviors>
        <behaviors:ViewModelBehavior />
        <behaviours:BorderlessWindowBehavior />
        <behaviours:WindowsSettingBehaviour />
        <behaviours:GlowWindowBehavior />
    </i:Interaction.Behaviors>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/AccentColors.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Border Grid.Row="0"
                Grid.ColumnSpan="3"
                Margin="0 10 0 10"
                BorderBrush="DimGray"
                BorderThickness="0 1 0 1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBox Grid.Column="0"
                         Margin="5"
                         HorizontalAlignment="Stretch"
                         VerticalContentAlignment="Center"
                         metro:TextBoxHelper.SelectAllOnFocus="True"
                         metro:TextBoxHelper.Watermark="{x:Static resx:CultureDependedTexts.DescriptionWatermark}"
                         BorderThickness="0"
                         Text="{Binding TimeAcquisition.Description,
                                        Mode=TwoWay,
                                        UpdateSourceTrigger=LostFocus}">
                    <i:Interaction.Behaviors>
                        <behaviors:InitialFocusBehavior />
                    </i:Interaction.Behaviors>
                </TextBox>
                <controls:TimeTracker Grid.Column="1"
                                      Margin="5"
                                      VerticalAlignment="Center"
                                      StartTime="{Binding TimeAcquisition.StartTime,
                                                          Mode=TwoWay}"
                                      StopTime="{Binding TimeAcquisition.StopTime,
                                                         Mode=TwoWay}">
                    <controls:TimeTracker.Style>
                        <Style TargetType="controls:TimeTracker">
                            <Setter Property="IsRunning" Value="False" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding TimeAcquisition.State}" Value="Tracking">
                                    <Setter Property="IsRunning" Value="True" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controls:TimeTracker.Style>
                </controls:TimeTracker>
            </Grid>
        </Border>

        <DatePicker Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Margin="10"
                    SelectedDate="{Binding ReferenceDate,
                                           Mode=TwoWay,
                                           UpdateSourceTrigger=PropertyChanged}" />
        <metro:TimePicker Grid.Row="2"
                          Grid.Column="0"
                          Margin="10"
                          metro:TextBoxHelper.Watermark="Start"
                          Culture="{x:Static global:CultureInfo.CurrentUICulture}"
                          SelectedTime="{Binding StartTime,
                                                 Mode=TwoWay,
                                                 UpdateSourceTrigger=PropertyChanged}" />

        <metro:TimePicker Grid.Row="2"
                          Grid.Column="1"
                          Margin="10"
                          metro:TextBoxHelper.Watermark="Stop"
                          Culture="{x:Static global:CultureInfo.CurrentUICulture}"
                          SelectedTime="{Binding StopTime,
                                                 Mode=TwoWay,
                                                 UpdateSourceTrigger=PropertyChanged}">
            <metro:TimePicker.Style>
                <Style BasedOn="{StaticResource {x:Type metro:TimePicker}}" TargetType="metro:TimePicker">
                    <Setter Property="IsEnabled" Value="True" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding TimeAcquisition.State}" Value="Tracking">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </metro:TimePicker.Style>
        </metro:TimePicker>
    </Grid>
</metro:MetroWindow>